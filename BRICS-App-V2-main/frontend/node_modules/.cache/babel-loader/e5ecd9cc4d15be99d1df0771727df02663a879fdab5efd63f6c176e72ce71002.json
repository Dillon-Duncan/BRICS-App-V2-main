{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrdun\\\\Downloads\\\\BRICS-App-V2-main\\\\BRICS-App-V2-main\\\\frontend\\\\src\\\\components\\\\Transactions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Transactions() {\n  _s();\n  // Initial budgets data (for BRICS currencies)\n  const [budgets, setBudgets] = useState([{\n    currency: 'BRL',\n    amount: 1000\n  }, {\n    currency: 'RUB',\n    amount: 8000\n  }, {\n    currency: 'INR',\n    amount: 15000\n  }, {\n    currency: 'CNY',\n    amount: 2000\n  }, {\n    currency: 'ZAR',\n    amount: 5000\n  }]);\n\n  // Initial transaction history (transactions that relate to budgets)\n  const [transactionHistory, setTransactionHistory] = useState([{\n    from: 'Account 1',\n    to: 'Account 2',\n    amount: 500,\n    type: 'transfer',\n    currency: 'BRL',\n    timestamp: new Date().toLocaleString()\n  }, {\n    from: 'Account 3',\n    to: '',\n    amount: 1000,\n    type: 'deposit',\n    currency: 'RUB',\n    timestamp: new Date().toLocaleString()\n  }, {\n    from: 'Account 2',\n    to: '',\n    amount: 200,\n    type: 'withdrawal',\n    currency: 'INR',\n    timestamp: new Date().toLocaleString()\n  }]);\n\n  // Transaction form state\n  const [transactionName, setTransactionName] = useState('');\n  const [transactionAmount, setTransactionAmount] = useState('');\n  const [transactionType, setTransactionType] = useState('');\n  const [transactionCurrency, setTransactionCurrency] = useState('');\n  const [transactionTo, setTransactionTo] = useState('');\n  const [error, setError] = useState(null);\n  const handleAddTransaction = () => {\n    if (!transactionName || !transactionAmount || !transactionType || !transactionCurrency) {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n    const amount = parseFloat(transactionAmount);\n    if (isNaN(amount) || amount <= 0) {\n      setError(\"Please enter a valid amount.\");\n      return;\n    }\n    const updatedBudgets = [...budgets];\n    const budgetIndex = updatedBudgets.findIndex(budget => budget.currency === transactionCurrency);\n    if (transactionType === 'deposit') {\n      updatedBudgets[budgetIndex].amount += amount;\n    } else if (transactionType === 'withdrawal') {\n      if (updatedBudgets[budgetIndex].amount >= amount) {\n        updatedBudgets[budgetIndex].amount -= amount;\n      } else {\n        setError(\"Insufficient funds for withdrawal.\");\n        return;\n      }\n    } else if (transactionType === 'transfer') {\n      const transferToCurrency = transactionTo;\n      const targetBudgetIndex = updatedBudgets.findIndex(budget => budget.currency === transferToCurrency);\n      if (targetBudgetIndex === -1) {\n        setError(\"Invalid target currency.\");\n        return;\n      }\n      if (updatedBudgets[budgetIndex].amount >= amount) {\n        updatedBudgets[budgetIndex].amount -= amount;\n        updatedBudgets[targetBudgetIndex].amount += amount;\n\n        // Record the transfer between accounts\n        const newTransaction = {\n          from: transactionName,\n          to: transactionTo,\n          amount: amount,\n          type: 'transfer',\n          currency: transactionCurrency,\n          timestamp: new Date().toLocaleString()\n        };\n        setTransactionHistory([...transactionHistory, newTransaction]);\n        setError(null);\n      } else {\n        setError(\"Insufficient funds for transfer.\");\n        return;\n      }\n    }\n\n    // Create a non-transfer transaction\n    if (transactionType !== 'transfer') {\n      const newTransaction = {\n        name: transactionName,\n        amount: amount,\n        type: transactionType,\n        currency: transactionCurrency,\n        timestamp: new Date().toLocaleString()\n      };\n      setTransactionHistory([...transactionHistory, newTransaction]);\n    }\n\n    // Update the budgets\n    setBudgets(updatedBudgets);\n    setTransactionName('');\n    setTransactionAmount('');\n    setTransactionType('');\n    setTransactionCurrency('');\n    setTransactionTo('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transactions-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: transactionName,\n        onChange: e => setTransactionName(e.target.value),\n        placeholder: \"Account Name\",\n        className: \"input-field\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: transactionAmount,\n        onChange: e => setTransactionAmount(e.target.value),\n        placeholder: \"Amount\",\n        className: \"input-field\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: transactionType,\n        onChange: e => setTransactionType(e.target.value),\n        className: \"input-field\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"deposit\",\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"withdrawal\",\n          children: \"Withdrawal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"transfer\",\n          children: \"Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: transactionCurrency,\n        onChange: e => setTransactionCurrency(e.target.value),\n        className: \"input-field\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), budgets.map(budget => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: budget.currency,\n          children: budget.currency\n        }, budget.currency, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), transactionType === 'transfer' && /*#__PURE__*/_jsxDEV(\"select\", {\n        value: transactionTo,\n        onChange: e => setTransactionTo(e.target.value),\n        className: \"input-field\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Recipient Currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), budgets.map(budget => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: budget.currency,\n          children: budget.currency\n        }, budget.currency, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTransaction,\n        className: \"auth-button\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transaction History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), transactionHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No transactions found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Timestamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: transactionHistory.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.from || transaction.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.to || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.currency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(Transactions, \"COrsWf1TeqkCAgzgKT8S7rghRB4=\");\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Transactions","_s","budgets","setBudgets","currency","amount","transactionHistory","setTransactionHistory","from","to","type","timestamp","Date","toLocaleString","transactionName","setTransactionName","transactionAmount","setTransactionAmount","transactionType","setTransactionType","transactionCurrency","setTransactionCurrency","transactionTo","setTransactionTo","error","setError","handleAddTransaction","parseFloat","isNaN","updatedBudgets","budgetIndex","findIndex","budget","transferToCurrency","targetBudgetIndex","newTransaction","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","required","map","onClick","length","transaction","index","_c","$RefreshReg$"],"sources":["C:/Users/mrdun/Downloads/BRICS-App-V2-main/BRICS-App-V2-main/frontend/src/components/Transactions.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Transactions() {\n  // Initial budgets data (for BRICS currencies)\n  const [budgets, setBudgets] = useState([\n    { currency: 'BRL', amount: 1000 },\n    { currency: 'RUB', amount: 8000 },\n    { currency: 'INR', amount: 15000 },\n    { currency: 'CNY', amount: 2000 },\n    { currency: 'ZAR', amount: 5000 },\n  ]);\n\n  // Initial transaction history (transactions that relate to budgets)\n  const [transactionHistory, setTransactionHistory] = useState([\n    { from: 'Account 1', to: 'Account 2', amount: 500, type: 'transfer', currency: 'BRL', timestamp: new Date().toLocaleString() },\n    { from: 'Account 3', to: '', amount: 1000, type: 'deposit', currency: 'RUB', timestamp: new Date().toLocaleString() },\n    { from: 'Account 2', to: '', amount: 200, type: 'withdrawal', currency: 'INR', timestamp: new Date().toLocaleString() },\n  ]);\n\n  // Transaction form state\n  const [transactionName, setTransactionName] = useState('');\n  const [transactionAmount, setTransactionAmount] = useState('');\n  const [transactionType, setTransactionType] = useState('');\n  const [transactionCurrency, setTransactionCurrency] = useState('');\n  const [transactionTo, setTransactionTo] = useState('');\n  const [error, setError] = useState(null);\n\n  const handleAddTransaction = () => {\n    if (!transactionName || !transactionAmount || !transactionType || !transactionCurrency) {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n\n    const amount = parseFloat(transactionAmount);\n    if (isNaN(amount) || amount <= 0) {\n      setError(\"Please enter a valid amount.\");\n      return;\n    }\n\n    const updatedBudgets = [...budgets];\n    const budgetIndex = updatedBudgets.findIndex((budget) => budget.currency === transactionCurrency);\n\n    if (transactionType === 'deposit') {\n      updatedBudgets[budgetIndex].amount += amount;\n    } else if (transactionType === 'withdrawal') {\n      if (updatedBudgets[budgetIndex].amount >= amount) {\n        updatedBudgets[budgetIndex].amount -= amount;\n      } else {\n        setError(\"Insufficient funds for withdrawal.\");\n        return;\n      }\n    } else if (transactionType === 'transfer') {\n      const transferToCurrency = transactionTo;\n      const targetBudgetIndex = updatedBudgets.findIndex((budget) => budget.currency === transferToCurrency);\n      \n      if (targetBudgetIndex === -1) {\n        setError(\"Invalid target currency.\");\n        return;\n      }\n\n      if (updatedBudgets[budgetIndex].amount >= amount) {\n        updatedBudgets[budgetIndex].amount -= amount;\n        updatedBudgets[targetBudgetIndex].amount += amount;\n\n        // Record the transfer between accounts\n        const newTransaction = {\n          from: transactionName,\n          to: transactionTo,\n          amount: amount,\n          type: 'transfer',\n          currency: transactionCurrency,\n          timestamp: new Date().toLocaleString(),\n        };\n\n        setTransactionHistory([...transactionHistory, newTransaction]);\n        setError(null);\n      } else {\n        setError(\"Insufficient funds for transfer.\");\n        return;\n      }\n    }\n\n    // Create a non-transfer transaction\n    if (transactionType !== 'transfer') {\n      const newTransaction = {\n        name: transactionName,\n        amount: amount,\n        type: transactionType,\n        currency: transactionCurrency,\n        timestamp: new Date().toLocaleString(),\n      };\n\n      setTransactionHistory([...transactionHistory, newTransaction]);\n    }\n\n    // Update the budgets\n    setBudgets(updatedBudgets);\n    setTransactionName('');\n    setTransactionAmount('');\n    setTransactionType('');\n    setTransactionCurrency('');\n    setTransactionTo('');\n  };\n\n  return (\n    <div className=\"transactions-container\">\n      <h2 className=\"form-title\">Transactions</h2>\n      {error && <div className=\"error-message\">{error}</div>}\n\n      {/* Transaction Form */}\n      <div className=\"transaction-form\">\n        <input\n          type=\"text\"\n          value={transactionName}\n          onChange={(e) => setTransactionName(e.target.value)}\n          placeholder=\"Account Name\"\n          className=\"input-field\"\n          required\n        />\n        <input\n          type=\"number\"\n          value={transactionAmount}\n          onChange={(e) => setTransactionAmount(e.target.value)}\n          placeholder=\"Amount\"\n          className=\"input-field\"\n          required\n        />\n        <select\n          value={transactionType}\n          onChange={(e) => setTransactionType(e.target.value)}\n          className=\"input-field\"\n          required\n        >\n          <option value=\"\">Select Type</option>\n          <option value=\"deposit\">Deposit</option>\n          <option value=\"withdrawal\">Withdrawal</option>\n          <option value=\"transfer\">Transfer</option>\n        </select>\n        <select\n          value={transactionCurrency}\n          onChange={(e) => setTransactionCurrency(e.target.value)}\n          className=\"input-field\"\n          required\n        >\n          <option value=\"\">Select Currency</option>\n          {budgets.map((budget) => (\n            <option key={budget.currency} value={budget.currency}>\n              {budget.currency}\n            </option>\n          ))}\n        </select>\n        {transactionType === 'transfer' && (\n          <select\n            value={transactionTo}\n            onChange={(e) => setTransactionTo(e.target.value)}\n            className=\"input-field\"\n            required\n          >\n            <option value=\"\">Select Recipient Currency</option>\n            {budgets.map((budget) => (\n              <option key={budget.currency} value={budget.currency}>\n                {budget.currency}\n              </option>\n            ))}\n          </select>\n        )}\n        <button onClick={handleAddTransaction} className=\"auth-button\">Add Transaction</button>\n      </div>\n\n      {/* Transaction History */}\n      <div className=\"transaction-history\">\n        <h3>Transaction History</h3>\n        {transactionHistory.length === 0 ? (\n          <p>No transactions found</p>\n        ) : (\n          <table>\n            <thead>\n              <tr>\n                <th>From</th>\n                <th>To</th>\n                <th>Amount</th>\n                <th>Type</th>\n                <th>Currency</th>\n                <th>Timestamp</th>\n              </tr>\n            </thead>\n            <tbody>\n              {transactionHistory.map((transaction, index) => (\n                <tr key={index}>\n                  <td>{transaction.from || transaction.name}</td>\n                  <td>{transaction.to || 'N/A'}</td>\n                  <td>{transaction.amount}</td>\n                  <td>{transaction.type}</td>\n                  <td>{transaction.currency}</td>\n                  <td>{transaction.timestamp}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Transactions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}