{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrdun\\\\Downloads\\\\BRICS-App-V2-main\\\\BRICS-App-V2-main\\\\frontend\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { loginUserAPI, loginEmployeeAPI } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(() => {\n    const savedUser = localStorage.getItem('user');\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n  const [token, setToken] = useState(() => {\n    return localStorage.getItem('token') || null;\n  });\n  const login = async (credentials, isEmployee = false) => {\n    try {\n      let response;\n      if (isEmployee) {\n        response = await loginEmployeeAPI(credentials);\n      } else {\n        response = await loginUserAPI(credentials);\n      }\n      if (!response.data || !response.data.token) {\n        throw new Error('Invalid response from server');\n      }\n\n      // Store user data and token\n      localStorage.setItem('user', JSON.stringify(response.data));\n      localStorage.setItem('token', response.data.token);\n      setUser(response.data);\n      setToken(response.data.token);\n      return {\n        success: true,\n        role: isEmployee ? 'employee' : 'user'\n      };\n    } catch (error) {\n      console.error('Login failed:', error);\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  };\n  const value = {\n    user,\n    token,\n    login,\n    logout,\n    isAuthenticated: !!token\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"F3MnCw8bPg9qenoLdXuIAeyBZXw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","loginUserAPI","loginEmployeeAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","savedUser","localStorage","getItem","JSON","parse","token","setToken","login","credentials","isEmployee","response","data","Error","setItem","stringify","success","role","error","console","message","value","logout","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mrdun/Downloads/BRICS-App-V2-main/BRICS-App-V2-main/frontend/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\nimport { loginUserAPI, loginEmployeeAPI } from './api';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(() => {\n    const savedUser = localStorage.getItem('user');\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n  const [token, setToken] = useState(() => {\n    return localStorage.getItem('token') || null;\n  });\n\n  const login = async (credentials, isEmployee = false) => {\n    try {\n      let response;\n      if (isEmployee) {\n        response = await loginEmployeeAPI(credentials);\n      } else {\n        response = await loginUserAPI(credentials);\n      }\n      \n      if (!response.data || !response.data.token) {\n        throw new Error('Invalid response from server');\n      }\n\n      // Store user data and token\n      localStorage.setItem('user', JSON.stringify(response.data));\n      localStorage.setItem('token', response.data.token);\n      \n      setUser(response.data);\n      setToken(response.data.token);\n      \n      return { \n        success: true, \n        role: isEmployee ? 'employee' : 'user' \n      };\n    } catch (error) {\n      console.error('Login failed:', error);\n      return { success: false, message: error.message };\n    }\n  };\n\n  const value = {\n    user,\n    token,\n    login,\n    logout,\n    isAuthenticated: !!token\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAClE,SAASC,YAAY,EAAEC,gBAAgB,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASQ,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,OAAOP,UAAU,CAACK,WAAW,CAAC;AAChC;AAACE,EAAA,CAFeD,OAAO;AAIvB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,MAAM;IACrC,MAAMc,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,IAAI;EACjD,CAAC,CAAC;EACF,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,MAAM;IACvC,OAAOe,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI;EAC9C,CAAC,CAAC;EAEF,MAAMK,KAAK,GAAG,MAAAA,CAAOC,WAAW,EAAEC,UAAU,GAAG,KAAK,KAAK;IACvD,IAAI;MACF,IAAIC,QAAQ;MACZ,IAAID,UAAU,EAAE;QACdC,QAAQ,GAAG,MAAMrB,gBAAgB,CAACmB,WAAW,CAAC;MAChD,CAAC,MAAM;QACLE,QAAQ,GAAG,MAAMtB,YAAY,CAACoB,WAAW,CAAC;MAC5C;MAEA,IAAI,CAACE,QAAQ,CAACC,IAAI,IAAI,CAACD,QAAQ,CAACC,IAAI,CAACN,KAAK,EAAE;QAC1C,MAAM,IAAIO,KAAK,CAAC,8BAA8B,CAAC;MACjD;;MAEA;MACAX,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACJ,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC3DV,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACC,IAAI,CAACN,KAAK,CAAC;MAElDN,OAAO,CAACW,QAAQ,CAACC,IAAI,CAAC;MACtBL,QAAQ,CAACI,QAAQ,CAACC,IAAI,CAACN,KAAK,CAAC;MAE7B,OAAO;QACLU,OAAO,EAAE,IAAI;QACbC,IAAI,EAAEP,UAAU,GAAG,UAAU,GAAG;MAClC,CAAC;IACH,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,OAAO;QAAEF,OAAO,EAAE,KAAK;QAAEI,OAAO,EAAEF,KAAK,CAACE;MAAQ,CAAC;IACnD;EACF,CAAC;EAED,MAAMC,KAAK,GAAG;IACZtB,IAAI;IACJO,KAAK;IACLE,KAAK;IACLc,MAAM;IACNC,eAAe,EAAE,CAAC,CAACjB;EACrB,CAAC;EAED,oBACEd,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACH,KAAK,EAAEA,KAAM;IAAAxB,QAAA,EAChCA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAC9B,GAAA,CApDeF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}