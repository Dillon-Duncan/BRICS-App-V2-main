{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrdun\\\\Downloads\\\\BRICS-App-V2-main\\\\BRICS-App-V2-main\\\\frontend\\\\src\\\\components\\\\Transactions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Transactions() {\n  _s();\n  // Initial budget data (BRICS currencies)\n  const [budgets, setBudgets] = useState([{\n    currency: 'BRL',\n    amount: 1000\n  }, {\n    currency: 'RUB',\n    amount: 8000\n  }, {\n    currency: 'INR',\n    amount: 15000\n  }, {\n    currency: 'CNY',\n    amount: 2000\n  }, {\n    currency: 'ZAR',\n    amount: 5000\n  }]);\n  const [transactions, setTransactions] = useState([]);\n  const [transactionName, setTransactionName] = useState('');\n  const [transactionAmount, setTransactionAmount] = useState('');\n  const [transactionType, setTransactionType] = useState('');\n  const [transactionCurrency, setTransactionCurrency] = useState('');\n  const [error, setError] = useState(null);\n  const handleAddTransaction = () => {\n    if (!transactionName || !transactionAmount || !transactionType || !transactionCurrency) {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n    const amount = parseFloat(transactionAmount);\n    if (isNaN(amount) || amount <= 0) {\n      setError(\"Please enter a valid amount.\");\n      return;\n    }\n\n    // Update budgets based on the transaction type\n    const updatedBudgets = [...budgets];\n    const budgetIndex = updatedBudgets.findIndex(budget => budget.currency === transactionCurrency);\n    if (transactionType === 'deposit') {\n      updatedBudgets[budgetIndex].amount += amount;\n    } else if (transactionType === 'withdrawal') {\n      if (updatedBudgets[budgetIndex].amount >= amount) {\n        updatedBudgets[budgetIndex].amount -= amount;\n      } else {\n        setError(\"Insufficient funds for withdrawal.\");\n        return;\n      }\n    } else if (transactionType === 'transfer') {\n      const transferToCurrency = prompt(\"Enter the currency to transfer to (BRL, RUB, INR, CNY, ZAR):\");\n      const transferAmount = prompt(\"Enter the amount to transfer:\");\n      const transferAmountNum = parseFloat(transferAmount);\n      if (isNaN(transferAmountNum) || transferAmountNum <= 0) {\n        setError(\"Invalid transfer amount.\");\n        return;\n      }\n\n      // Perform transfer between budgets\n      const targetBudgetIndex = updatedBudgets.findIndex(budget => budget.currency === transferToCurrency);\n      if (targetBudgetIndex === -1) {\n        setError(\"Invalid target currency.\");\n        return;\n      }\n      if (updatedBudgets[budgetIndex].amount >= transferAmountNum) {\n        updatedBudgets[budgetIndex].amount -= transferAmountNum;\n        updatedBudgets[targetBudgetIndex].amount += transferAmountNum;\n        const newTransaction = {\n          name: transactionName,\n          amount: transferAmountNum,\n          type: 'transfer',\n          currencyFrom: transactionCurrency,\n          currencyTo: transferToCurrency\n        };\n        setTransactions([...transactions, newTransaction]);\n        setError(null);\n      } else {\n        setError(\"Insufficient funds for transfer.\");\n        return;\n      }\n    }\n    const newTransaction = {\n      name: transactionName,\n      amount,\n      type: transactionType,\n      currency: transactionCurrency\n    };\n    setTransactions([...transactions, newTransaction]);\n    setBudgets(updatedBudgets);\n    setTransactionName('');\n    setTransactionAmount('');\n    setTransactionType('');\n    setTransactionCurrency('');\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transactions-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: transactionName,\n        onChange: e => setTransactionName(e.target.value),\n        placeholder: \"Transaction Name\",\n        className: \"input-field\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: transactionAmount,\n        onChange: e => setTransactionAmount(e.target.value),\n        placeholder: \"Amount\",\n        className: \"input-field\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: transactionType,\n        onChange: e => setTransactionType(e.target.value),\n        className: \"input-field\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"deposit\",\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"withdrawal\",\n          children: \"Withdrawal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"transfer\",\n          children: \"Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: transactionCurrency,\n        onChange: e => setTransactionCurrency(e.target.value),\n        className: \"input-field\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), budgets.map(budget => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: budget.currency,\n          children: budget.currency\n        }, budget.currency, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTransaction,\n        className: \"auth-button\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transaction History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), transactions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No transactions found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: transactions.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.currency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date().toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Current Budgets:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"budget-grid\",\n        children: budgets.map(budget => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"budget-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: budget.currency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Amount: \", budget.amount.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)]\n        }, budget.currency, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(Transactions, \"vo4PhisxgftSbCM5TPHkr8ZnJgs=\");\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Transactions","_s","budgets","setBudgets","currency","amount","transactions","setTransactions","transactionName","setTransactionName","transactionAmount","setTransactionAmount","transactionType","setTransactionType","transactionCurrency","setTransactionCurrency","error","setError","handleAddTransaction","parseFloat","isNaN","updatedBudgets","budgetIndex","findIndex","budget","transferToCurrency","prompt","transferAmount","transferAmountNum","targetBudgetIndex","newTransaction","name","type","currencyFrom","currencyTo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","required","map","onClick","length","transaction","index","Date","toLocaleDateString","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/mrdun/Downloads/BRICS-App-V2-main/BRICS-App-V2-main/frontend/src/components/Transactions.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Transactions() {\n  // Initial budget data (BRICS currencies)\n  const [budgets, setBudgets] = useState([\n    { currency: 'BRL', amount: 1000 },\n    { currency: 'RUB', amount: 8000 },\n    { currency: 'INR', amount: 15000 },\n    { currency: 'CNY', amount: 2000 },\n    { currency: 'ZAR', amount: 5000 },\n  ]);\n\n  const [transactions, setTransactions] = useState([]);\n  const [transactionName, setTransactionName] = useState('');\n  const [transactionAmount, setTransactionAmount] = useState('');\n  const [transactionType, setTransactionType] = useState('');\n  const [transactionCurrency, setTransactionCurrency] = useState('');\n  const [error, setError] = useState(null);\n\n  const handleAddTransaction = () => {\n    if (!transactionName || !transactionAmount || !transactionType || !transactionCurrency) {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n\n    const amount = parseFloat(transactionAmount);\n    if (isNaN(amount) || amount <= 0) {\n      setError(\"Please enter a valid amount.\");\n      return;\n    }\n\n    // Update budgets based on the transaction type\n    const updatedBudgets = [...budgets];\n    const budgetIndex = updatedBudgets.findIndex((budget) => budget.currency === transactionCurrency);\n\n    if (transactionType === 'deposit') {\n      updatedBudgets[budgetIndex].amount += amount;\n    } else if (transactionType === 'withdrawal') {\n      if (updatedBudgets[budgetIndex].amount >= amount) {\n        updatedBudgets[budgetIndex].amount -= amount;\n      } else {\n        setError(\"Insufficient funds for withdrawal.\");\n        return;\n      }\n    } else if (transactionType === 'transfer') {\n      const transferToCurrency = prompt(\"Enter the currency to transfer to (BRL, RUB, INR, CNY, ZAR):\");\n      const transferAmount = prompt(\"Enter the amount to transfer:\");\n      \n      const transferAmountNum = parseFloat(transferAmount);\n      if (isNaN(transferAmountNum) || transferAmountNum <= 0) {\n        setError(\"Invalid transfer amount.\");\n        return;\n      }\n      \n      // Perform transfer between budgets\n      const targetBudgetIndex = updatedBudgets.findIndex((budget) => budget.currency === transferToCurrency);\n      \n      if (targetBudgetIndex === -1) {\n        setError(\"Invalid target currency.\");\n        return;\n      }\n\n      if (updatedBudgets[budgetIndex].amount >= transferAmountNum) {\n        updatedBudgets[budgetIndex].amount -= transferAmountNum;\n        updatedBudgets[targetBudgetIndex].amount += transferAmountNum;\n\n        const newTransaction = {\n          name: transactionName,\n          amount: transferAmountNum,\n          type: 'transfer',\n          currencyFrom: transactionCurrency,\n          currencyTo: transferToCurrency,\n        };\n        setTransactions([...transactions, newTransaction]);\n        setError(null);\n      } else {\n        setError(\"Insufficient funds for transfer.\");\n        return;\n      }\n    }\n\n    const newTransaction = {\n      name: transactionName,\n      amount,\n      type: transactionType,\n      currency: transactionCurrency,\n    };\n\n    setTransactions([...transactions, newTransaction]);\n    setBudgets(updatedBudgets);\n    setTransactionName('');\n    setTransactionAmount('');\n    setTransactionType('');\n    setTransactionCurrency('');\n    setError(null);\n  };\n\n  return (\n    <div className=\"transactions-container\">\n      <h2 className=\"form-title\">Transactions</h2>\n      {error && <div className=\"error-message\">{error}</div>}\n\n      {/* Transaction form */}\n      <div className=\"transaction-form\">\n        <input\n          type=\"text\"\n          value={transactionName}\n          onChange={(e) => setTransactionName(e.target.value)}\n          placeholder=\"Transaction Name\"\n          className=\"input-field\"\n          required\n        />\n        <input\n          type=\"number\"\n          value={transactionAmount}\n          onChange={(e) => setTransactionAmount(e.target.value)}\n          placeholder=\"Amount\"\n          className=\"input-field\"\n          required\n        />\n        <select\n          value={transactionType}\n          onChange={(e) => setTransactionType(e.target.value)}\n          className=\"input-field\"\n          required\n        >\n          <option value=\"\">Select Type</option>\n          <option value=\"deposit\">Deposit</option>\n          <option value=\"withdrawal\">Withdrawal</option>\n          <option value=\"transfer\">Transfer</option>\n        </select>\n        <select\n          value={transactionCurrency}\n          onChange={(e) => setTransactionCurrency(e.target.value)}\n          className=\"input-field\"\n          required\n        >\n          <option value=\"\">Select Currency</option>\n          {budgets.map((budget) => (\n            <option key={budget.currency} value={budget.currency}>\n              {budget.currency}\n            </option>\n          ))}\n        </select>\n        <button onClick={handleAddTransaction} className=\"auth-button\">Add Transaction</button>\n      </div>\n\n      {/* Transaction History */}\n      <div className=\"transaction-history\">\n        <h3>Transaction History</h3>\n        {transactions.length === 0 ? (\n          <p>No transactions found</p>\n        ) : (\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Type</th>\n                <th>Amount</th>\n                <th>Currency</th>\n                <th>Date</th>\n              </tr>\n            </thead>\n            <tbody>\n              {transactions.map((transaction, index) => (\n                <tr key={index}>\n                  <td>{transaction.name}</td>\n                  <td>{transaction.type}</td>\n                  <td>{transaction.amount}</td>\n                  <td>{transaction.currency}</td>\n                  <td>{new Date().toLocaleDateString()}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n\n      {/* Display Budget Info */}\n      <div className=\"budget-list\">\n        <h3>Current Budgets:</h3>\n        <div className=\"budget-grid\">\n          {budgets.map((budget) => (\n            <div key={budget.currency} className=\"budget-item\">\n              <h4>{budget.currency}</h4>\n              <p>Amount: {budget.amount.toLocaleString()}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Transactions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}