{"ast":null,"code":"// src/components/Login.js\nimport React,{useState}from'react';import{useAuth}from'../AuthContext';import{loginUserAPI as loginUser}from'../api';import{useNavigate}from'react-router-dom';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){const{login}=useAuth();const[isEmployee,setIsEmployee]=useState(false);const[form,setForm]=useState({userName:'',accNumber:'',password:''});const[error,setError]=useState(null);const navigate=useNavigate();// Predefined employee credentials\nconst EMPLOYEE_CREDENTIALS={userName:'admin',password:'AdminSecurePassword123!'// A placeholder secure password\n};// Handle input changes\nconst handleChange=e=>{setForm({...form,[e.target.name]:e.target.value});};// Handle form submission\nconst handleSubmit=async e=>{e.preventDefault();try{if(isEmployee){// Employee login logic\nif(form.userName===EMPLOYEE_CREDENTIALS.userName&&form.password===EMPLOYEE_CREDENTIALS.password){login({userName:form.userName,role:'employee'});navigate('/admin');// Redirect to admin dashboard\n}else{setError('Password is incorrect, please contact your superior for password details if you are an employee of this banking service');}}else{// Normal user login logic\nconst res=await loginUser(form);// Make API call to authenticate normal user\nlogin(res.data);// Save user data and JWT token\nnavigate('/budget');// Redirect to budget page\n}}catch(err){setError(isEmployee?'Password is incorrect, please contact your superior for password details if you are an employee of this banking service':'Login failed. Please check your credentials.');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:isEmployee?'Employee Login':'User Login'}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"userName\",onChange:handleChange,placeholder:\"Username\",value:form.userName,required:true}),!isEmployee&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"accNumber\",onChange:handleChange,placeholder:\"Account Number\",value:form.accNumber,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",onChange:handleChange,placeholder:\"Password\",value:form.password,required:true})]}),isEmployee&&/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",onChange:handleChange,placeholder:\"Employee Password\",value:form.password,required:true}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isEmployee,onChange:()=>{setIsEmployee(!isEmployee);setForm({userName:'',accNumber:'',password:''});// Reset form on toggle\nsetError(null);// Clear any existing errors\n}}),' ',\"Employee Login\"]}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]})]});}export default Login;","map":{"version":3,"names":["React","useState","useAuth","loginUserAPI","loginUser","useNavigate","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Login","login","isEmployee","setIsEmployee","form","setForm","userName","accNumber","password","error","setError","navigate","EMPLOYEE_CREDENTIALS","handleChange","e","target","name","value","handleSubmit","preventDefault","role","res","data","err","children","onSubmit","type","onChange","placeholder","required","checked","style","color"],"sources":["C:/Users/mrdun/Downloads/BRICS-App-V2-main/BRICS-App-V2-main/frontend/src/components/Login.js"],"sourcesContent":["// src/components/Login.js\nimport React, { useState } from 'react';\nimport { useAuth } from '../AuthContext';\nimport { loginUserAPI as loginUser } from '../api';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Login() {\n  const { login } = useAuth();\n  const [isEmployee, setIsEmployee] = useState(false);\n  const [form, setForm] = useState({ userName: '', accNumber: '', password: '' });\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Predefined employee credentials\n  const EMPLOYEE_CREDENTIALS = {\n    userName: 'admin',\n    password: 'AdminSecurePassword123!', // A placeholder secure password\n  };\n\n  // Handle input changes\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (isEmployee) {\n        // Employee login logic\n        if (\n          form.userName === EMPLOYEE_CREDENTIALS.userName &&\n          form.password === EMPLOYEE_CREDENTIALS.password\n        ) {\n          login({ userName: form.userName, role: 'employee' });\n          navigate('/admin'); // Redirect to admin dashboard\n        } else {\n          setError(\n            'Password is incorrect, please contact your superior for password details if you are an employee of this banking service'\n          );\n        }\n      } else {\n        // Normal user login logic\n        const res = await loginUser(form); // Make API call to authenticate normal user\n        login(res.data); // Save user data and JWT token\n        navigate('/budget'); // Redirect to budget page\n      }\n    } catch (err) {\n      setError(\n        isEmployee\n          ? 'Password is incorrect, please contact your superior for password details if you are an employee of this banking service'\n          : 'Login failed. Please check your credentials.'\n      );\n    }\n  };\n\n  return (\n    <div>\n      <h2>{isEmployee ? 'Employee Login' : 'User Login'}</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"userName\"\n          onChange={handleChange}\n          placeholder=\"Username\"\n          value={form.userName}\n          required\n        />\n        {!isEmployee && (\n          <>\n            <input\n              type=\"text\"\n              name=\"accNumber\"\n              onChange={handleChange}\n              placeholder=\"Account Number\"\n              value={form.accNumber}\n              required\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              placeholder=\"Password\"\n              value={form.password}\n              required\n            />\n          </>\n        )}\n        {isEmployee && (\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChange}\n            placeholder=\"Employee Password\"\n            value={form.password}\n            required\n          />\n        )}\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={isEmployee}\n            onChange={() => {\n              setIsEmployee(!isEmployee);\n              setForm({ userName: '', accNumber: '', password: '' }); // Reset form on toggle\n              setError(null); // Clear any existing errors\n            }}\n          />{' '}\n          Employee Login\n        </label>\n        {error && <p style={{ color: 'red' }}>{error}</p>}\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}