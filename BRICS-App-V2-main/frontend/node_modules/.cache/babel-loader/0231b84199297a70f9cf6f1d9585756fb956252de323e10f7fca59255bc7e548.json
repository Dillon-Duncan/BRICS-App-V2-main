{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrdun\\\\Downloads\\\\BRICS-App-V2-main\\\\BRICS-App-V2-main\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// src/components/Login.js\nimport React, { useState } from 'react';\nimport { useAuth } from '../AuthContext';\nimport { loginUserAPI as loginUser } from '../api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const {\n    login\n  } = useAuth();\n  const [isEmployee, setIsEmployee] = useState(false);\n  const [form, setForm] = useState({\n    userName: '',\n    accNumber: '',\n    password: ''\n  });\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Predefined employee credentials\n  const EMPLOYEE_CREDENTIALS = {\n    userName: 'admin',\n    password: 'AdminSecurePassword123!' // A placeholder secure password\n  };\n\n  // Handle input changes\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (isEmployee) {\n        // Employee login logic\n        if (form.userName === EMPLOYEE_CREDENTIALS.userName && form.password === EMPLOYEE_CREDENTIALS.password) {\n          login({\n            userName: form.userName,\n            role: 'employee'\n          });\n          navigate('/admin'); // Redirect to admin dashboard\n        } else {\n          setError('Password is incorrect, please contact your superior for password details if you are an employee of this banking service');\n        }\n      } else {\n        // Normal user login logic\n        const res = await loginUser(form); // Make API call to authenticate normal user\n        login(res.data); // Save user data and JWT token\n        navigate('/budget'); // Redirect to budget page\n      }\n    } catch (err) {\n      setError(isEmployee ? 'Password is incorrect, please contact your superior for password details if you are an employee of this banking service' : 'Login failed. Please check your credentials.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isEmployee ? 'Employee Login' : 'User Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"userName\",\n        onChange: handleChange,\n        placeholder: \"Username\",\n        value: form.userName,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), !isEmployee && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"accNumber\",\n          onChange: handleChange,\n          placeholder: \"Account Number\",\n          value: form.accNumber,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: handleChange,\n          placeholder: \"Password\",\n          value: form.password,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), isEmployee && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        onChange: handleChange,\n        placeholder: \"Employee Password\",\n        value: form.password,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isEmployee,\n          onChange: () => {\n            setIsEmployee(!isEmployee);\n            setForm({\n              userName: '',\n              accNumber: '',\n              password: ''\n            }); // Reset form on toggle\n            setError(null); // Clear any existing errors\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), ' ', \"Employee Login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"UmpLnqzico9Nxs9MCrkyPDBUae8=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useAuth","loginUserAPI","loginUser","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","login","isEmployee","setIsEmployee","form","setForm","userName","accNumber","password","error","setError","navigate","EMPLOYEE_CREDENTIALS","handleChange","e","target","name","value","handleSubmit","preventDefault","role","res","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","checked","style","color","_c","$RefreshReg$"],"sources":["C:/Users/mrdun/Downloads/BRICS-App-V2-main/BRICS-App-V2-main/frontend/src/components/Login.js"],"sourcesContent":["// src/components/Login.js\nimport React, { useState } from 'react';\nimport { useAuth } from '../AuthContext';\nimport { loginUserAPI as loginUser } from '../api';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Login() {\n  const { login } = useAuth();\n  const [isEmployee, setIsEmployee] = useState(false);\n  const [form, setForm] = useState({ userName: '', accNumber: '', password: '' });\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Predefined employee credentials\n  const EMPLOYEE_CREDENTIALS = {\n    userName: 'admin',\n    password: 'AdminSecurePassword123!', // A placeholder secure password\n  };\n\n  // Handle input changes\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (isEmployee) {\n        // Employee login logic\n        if (\n          form.userName === EMPLOYEE_CREDENTIALS.userName &&\n          form.password === EMPLOYEE_CREDENTIALS.password\n        ) {\n          login({ userName: form.userName, role: 'employee' });\n          navigate('/admin'); // Redirect to admin dashboard\n        } else {\n          setError(\n            'Password is incorrect, please contact your superior for password details if you are an employee of this banking service'\n          );\n        }\n      } else {\n        // Normal user login logic\n        const res = await loginUser(form); // Make API call to authenticate normal user\n        login(res.data); // Save user data and JWT token\n        navigate('/budget'); // Redirect to budget page\n      }\n    } catch (err) {\n      setError(\n        isEmployee\n          ? 'Password is incorrect, please contact your superior for password details if you are an employee of this banking service'\n          : 'Login failed. Please check your credentials.'\n      );\n    }\n  };\n\n  return (\n    <div>\n      <h2>{isEmployee ? 'Employee Login' : 'User Login'}</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"userName\"\n          onChange={handleChange}\n          placeholder=\"Username\"\n          value={form.userName}\n          required\n        />\n        {!isEmployee && (\n          <>\n            <input\n              type=\"text\"\n              name=\"accNumber\"\n              onChange={handleChange}\n              placeholder=\"Account Number\"\n              value={form.accNumber}\n              required\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              placeholder=\"Password\"\n              value={form.password}\n              required\n            />\n          </>\n        )}\n        {isEmployee && (\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={handleChange}\n            placeholder=\"Employee Password\"\n            value={form.password}\n            required\n          />\n        )}\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={isEmployee}\n            onChange={() => {\n              setIsEmployee(!isEmployee);\n              setForm({ userName: '', accNumber: '', password: '' }); // Reset form on toggle\n              setError(null); // Clear any existing errors\n            }}\n          />{' '}\n          Employee Login\n        </label>\n        {error && <p style={{ color: 'red' }}>{error}</p>}\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}