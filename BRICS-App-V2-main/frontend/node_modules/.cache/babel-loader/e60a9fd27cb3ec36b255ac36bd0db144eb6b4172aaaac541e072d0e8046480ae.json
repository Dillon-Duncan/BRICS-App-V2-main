{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrdun\\\\Downloads\\\\BRICS-App-V2-main\\\\BRICS-App-V2-main\\\\frontend\\\\src\\\\components\\\\Transactions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Transactions() {\n  _s();\n  // Accounts data (each account has a name, associated currency, and balance)\n  const [accounts, setAccounts] = useState([{\n    id: 1,\n    name: 'Dollin',\n    currency: 'BRL',\n    balance: 1000\n  }, {\n    id: 2,\n    name: 'Wollice',\n    currency: 'RUB',\n    balance: 8000\n  }, {\n    id: 3,\n    name: 'Shetana',\n    currency: 'INR',\n    balance: 15000\n  }, {\n    id: 4,\n    name: 'Miben',\n    currency: 'CNY',\n    balance: 2000\n  }, {\n    id: 5,\n    name: 'Seko',\n    currency: 'ZAR',\n    balance: 5000\n  }]);\n\n  // Initial transaction history (transactions that relate to accounts)\n  const [transactionHistory, setTransactionHistory] = useState([{\n    from: 'Milema',\n    to: 'Dollin',\n    amount: 500,\n    type: 'transfer',\n    currency: 'BRL',\n    timestamp: new Date().toLocaleString()\n  }, {\n    from: 'Milema',\n    to: 'Shetana',\n    amount: 1000,\n    type: 'deposit',\n    currency: 'RUB',\n    timestamp: new Date().toLocaleString()\n  }, {\n    from: 'Milema',\n    to: 'Miben',\n    amount: 200,\n    type: 'transfer',\n    currency: 'INR',\n    timestamp: new Date().toLocaleString()\n  }]);\n\n  // Transaction form state\n  const [selectedAccount, setSelectedAccount] = useState('');\n  const [transactionAmount, setTransactionAmount] = useState('');\n  const [transactionType, setTransactionType] = useState('');\n  const [transactionCurrency, setTransactionCurrency] = useState('');\n  const [transactionTo, setTransactionTo] = useState('');\n  const [error, setError] = useState(null);\n  const handleAddTransaction = () => {\n    if (!selectedAccount || !transactionAmount || !transactionType || !transactionCurrency) {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n    const amount = parseFloat(transactionAmount);\n    if (isNaN(amount) || amount <= 0) {\n      setError(\"Please enter a valid amount.\");\n      return;\n    }\n    const updatedAccounts = [...accounts];\n    const accountIndex = updatedAccounts.findIndex(account => account.name === selectedAccount);\n    if (transactionType === 'deposit') {\n      updatedAccounts[accountIndex].balance += amount;\n    } else if (transactionType === 'withdrawal') {\n      if (updatedAccounts[accountIndex].balance >= amount) {\n        updatedAccounts[accountIndex].balance -= amount;\n      } else {\n        setError(\"Insufficient funds for withdrawal.\");\n        return;\n      }\n    } else if (transactionType === 'transfer') {\n      const transferToAccount = transactionTo;\n      const targetAccountIndex = updatedAccounts.findIndex(account => account.name === transferToAccount);\n      if (targetAccountIndex === -1) {\n        setError(\"Invalid target account.\");\n        return;\n      }\n      if (updatedAccounts[accountIndex].balance >= amount) {\n        updatedAccounts[accountIndex].balance -= amount;\n        updatedAccounts[targetAccountIndex].balance += amount;\n\n        // Record the transfer between accounts\n        const newTransaction = {\n          from: selectedAccount,\n          to: transactionTo,\n          amount: amount,\n          type: 'transfer',\n          currency: transactionCurrency,\n          timestamp: new Date().toLocaleString()\n        };\n\n        // Add the new transaction at the top of the history\n        setTransactionHistory(prevHistory => [newTransaction, ...prevHistory].slice(0, 3)); // Keep only the 3 latest transactions\n        setError(null);\n      } else {\n        setError(\"Insufficient funds for transfer.\");\n        return;\n      }\n    }\n\n    // Create a non-transfer transaction\n    if (transactionType !== 'transfer') {\n      const newTransaction = {\n        from: selectedAccount,\n        amount: amount,\n        type: transactionType,\n        currency: transactionCurrency,\n        timestamp: new Date().toLocaleString()\n      };\n\n      // Add the new transaction at the top of the history\n      setTransactionHistory(prevHistory => [newTransaction, ...prevHistory].slice(0, 3)); // Keep only the 3 latest transactions\n    }\n\n    // Update the accounts\n    setAccounts(updatedAccounts);\n    setTransactionAmount('');\n    setTransactionType('');\n    setTransactionCurrency('');\n    setTransactionTo('');\n    setSelectedAccount('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transactions-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedAccount,\n        onChange: e => setSelectedAccount(e.target.value),\n        className: \"input-field\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: account.name,\n          children: [account.name, \" - \", account.currency, \" (\", account.balance, \")\"]\n        }, account.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: transactionAmount,\n        onChange: e => setTransactionAmount(e.target.value),\n        placeholder: \"Amount\",\n        className: \"input-field\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: transactionType,\n        onChange: e => setTransactionType(e.target.value),\n        className: \"input-field\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"deposit\",\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"withdrawal\",\n          children: \"Withdrawal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"transfer\",\n          children: \"Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: transactionCurrency,\n        onChange: e => setTransactionCurrency(e.target.value),\n        className: \"input-field\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: account.currency,\n          children: account.currency\n        }, account.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), transactionType === 'transfer' && /*#__PURE__*/_jsxDEV(\"select\", {\n        value: transactionTo,\n        onChange: e => setTransactionTo(e.target.value),\n        className: \"input-field\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Recipient Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: account.name,\n          children: [account.name, \" - \", account.currency]\n        }, account.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTransaction,\n        className: \"auth-button\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transaction-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transaction History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), transactionHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No transactions found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Timestamp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: transactionHistory.map((transaction, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.from\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.to || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.currency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(Transactions, \"V401GwKS2U0m5mIoL/oUcRPCxDU=\");\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Transactions","_s","accounts","setAccounts","id","name","currency","balance","transactionHistory","setTransactionHistory","from","to","amount","type","timestamp","Date","toLocaleString","selectedAccount","setSelectedAccount","transactionAmount","setTransactionAmount","transactionType","setTransactionType","transactionCurrency","setTransactionCurrency","transactionTo","setTransactionTo","error","setError","handleAddTransaction","parseFloat","isNaN","updatedAccounts","accountIndex","findIndex","account","transferToAccount","targetAccountIndex","newTransaction","prevHistory","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","required","map","placeholder","onClick","length","transaction","index","_c","$RefreshReg$"],"sources":["C:/Users/mrdun/Downloads/BRICS-App-V2-main/BRICS-App-V2-main/frontend/src/components/Transactions.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Transactions() {\n  // Accounts data (each account has a name, associated currency, and balance)\n  const [accounts, setAccounts] = useState([\n    { id: 1, name: 'Dollin', currency: 'BRL', balance: 1000 },\n    { id: 2, name: 'Wollice', currency: 'RUB', balance: 8000 },\n    { id: 3, name: 'Shetana', currency: 'INR', balance: 15000 },\n    { id: 4, name: 'Miben', currency: 'CNY', balance: 2000 },\n    { id: 5, name: 'Seko', currency: 'ZAR', balance: 5000 },\n  ]);\n\n  // Initial transaction history (transactions that relate to accounts)\n  const [transactionHistory, setTransactionHistory] = useState([\n    { from: 'Milema', to: 'Dollin', amount: 500, type: 'transfer', currency: 'BRL', timestamp: new Date().toLocaleString() },\n    { from: 'Milema', to: 'Shetana', amount: 1000, type: 'deposit', currency: 'RUB', timestamp: new Date().toLocaleString() },\n    { from: 'Milema', to: 'Miben', amount: 200, type: 'transfer', currency: 'INR', timestamp: new Date().toLocaleString() },\n  ]);\n\n  // Transaction form state\n  const [selectedAccount, setSelectedAccount] = useState('');\n  const [transactionAmount, setTransactionAmount] = useState('');\n  const [transactionType, setTransactionType] = useState('');\n  const [transactionCurrency, setTransactionCurrency] = useState('');\n  const [transactionTo, setTransactionTo] = useState('');\n  const [error, setError] = useState(null);\n\n  const handleAddTransaction = () => {\n    if (!selectedAccount || !transactionAmount || !transactionType || !transactionCurrency) {\n      setError(\"Please fill in all fields\");\n      return;\n    }\n\n    const amount = parseFloat(transactionAmount);\n    if (isNaN(amount) || amount <= 0) {\n      setError(\"Please enter a valid amount.\");\n      return;\n    }\n\n    const updatedAccounts = [...accounts];\n    const accountIndex = updatedAccounts.findIndex((account) => account.name === selectedAccount);\n\n    if (transactionType === 'deposit') {\n      updatedAccounts[accountIndex].balance += amount;\n    } else if (transactionType === 'withdrawal') {\n      if (updatedAccounts[accountIndex].balance >= amount) {\n        updatedAccounts[accountIndex].balance -= amount;\n      } else {\n        setError(\"Insufficient funds for withdrawal.\");\n        return;\n      }\n    } else if (transactionType === 'transfer') {\n      const transferToAccount = transactionTo;\n      const targetAccountIndex = updatedAccounts.findIndex((account) => account.name === transferToAccount);\n\n      if (targetAccountIndex === -1) {\n        setError(\"Invalid target account.\");\n        return;\n      }\n\n      if (updatedAccounts[accountIndex].balance >= amount) {\n        updatedAccounts[accountIndex].balance -= amount;\n        updatedAccounts[targetAccountIndex].balance += amount;\n\n        // Record the transfer between accounts\n        const newTransaction = {\n          from: selectedAccount,\n          to: transactionTo,\n          amount: amount,\n          type: 'transfer',\n          currency: transactionCurrency,\n          timestamp: new Date().toLocaleString(),\n        };\n\n        // Add the new transaction at the top of the history\n        setTransactionHistory(prevHistory => [newTransaction, ...prevHistory].slice(0, 3)); // Keep only the 3 latest transactions\n        setError(null);\n      } else {\n        setError(\"Insufficient funds for transfer.\");\n        return;\n      }\n    }\n\n    // Create a non-transfer transaction\n    if (transactionType !== 'transfer') {\n      const newTransaction = {\n        from: selectedAccount,\n        amount: amount,\n        type: transactionType,\n        currency: transactionCurrency,\n        timestamp: new Date().toLocaleString(),\n      };\n\n      // Add the new transaction at the top of the history\n      setTransactionHistory(prevHistory => [newTransaction, ...prevHistory].slice(0, 3)); // Keep only the 3 latest transactions\n    }\n\n    // Update the accounts\n    setAccounts(updatedAccounts);\n    setTransactionAmount('');\n    setTransactionType('');\n    setTransactionCurrency('');\n    setTransactionTo('');\n    setSelectedAccount('');\n  };\n\n  return (\n    <div className=\"transactions-container\">\n      <h2 className=\"form-title\">Transactions</h2>\n      {error && <div className=\"error-message\">{error}</div>}\n\n      {/* Transaction Form */}\n      <div className=\"transaction-form\">\n        <select\n          value={selectedAccount}\n          onChange={(e) => setSelectedAccount(e.target.value)}\n          className=\"input-field\"\n          required\n        >\n          <option value=\"\">Select Account</option>\n          {accounts.map((account) => (\n            <option key={account.id} value={account.name}>\n              {account.name} - {account.currency} ({account.balance})\n            </option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          value={transactionAmount}\n          onChange={(e) => setTransactionAmount(e.target.value)}\n          placeholder=\"Amount\"\n          className=\"input-field\"\n          required\n        />\n        <select\n          value={transactionType}\n          onChange={(e) => setTransactionType(e.target.value)}\n          className=\"input-field\"\n          required\n        >\n          <option value=\"\">Select Type</option>\n          <option value=\"deposit\">Deposit</option>\n          <option value=\"withdrawal\">Withdrawal</option>\n          <option value=\"transfer\">Transfer</option>\n        </select>\n        <select\n          value={transactionCurrency}\n          onChange={(e) => setTransactionCurrency(e.target.value)}\n          className=\"input-field\"\n          required\n        >\n          <option value=\"\">Select Currency</option>\n          {accounts.map((account) => (\n            <option key={account.id} value={account.currency}>\n              {account.currency}\n            </option>\n          ))}\n        </select>\n        {transactionType === 'transfer' && (\n          <select\n            value={transactionTo}\n            onChange={(e) => setTransactionTo(e.target.value)}\n            className=\"input-field\"\n            required\n          >\n            <option value=\"\">Select Recipient Account</option>\n            {accounts.map((account) => (\n              <option key={account.id} value={account.name}>\n                {account.name} - {account.currency}\n              </option>\n            ))}\n          </select>\n        )}\n        <button onClick={handleAddTransaction} className=\"auth-button\">Add Transaction</button>\n      </div>\n\n      {/* Transaction History */}\n      <div className=\"transaction-history\">\n        <h3>Transaction History</h3>\n        {transactionHistory.length === 0 ? (\n          <p>No transactions found</p>\n        ) : (\n          <table>\n            <thead>\n              <tr>\n                <th>From</th>\n                <th>To</th>\n                <th>Amount</th>\n                <th>Type</th>\n                <th>Currency</th>\n                <th>Timestamp</th>\n              </tr>\n            </thead>\n            <tbody>\n              {transactionHistory.map((transaction, index) => (\n                <tr key={index}>\n                  <td>{transaction.from}</td>\n                  <td>{transaction.to || 'N/A'}</td>\n                  <td>{transaction.amount}</td>\n                  <td>{transaction.type}</td>\n                  <td>{transaction.currency}</td>\n                  <td>{transaction.timestamp}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Transactions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}