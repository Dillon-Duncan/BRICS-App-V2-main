{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrdun\\\\Desktop\\\\BRICS\\\\BRICS-App-V2-main\\\\frontend\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { loginUserAPI, loginEmployeeAPI } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const login = async (credentials, isEmployee = false) => {\n    try {\n      const response = isEmployee ? await loginEmployeeAPI(credentials) : await loginUserAPI(credentials);\n      if (!response || !response.success || !response.data) {\n        throw new Error('Invalid response from server');\n      }\n      const userData = {\n        ...response.data,\n        role: isEmployee ? 'employee' : 'user'\n      };\n      setUser(userData);\n      setToken(response.data.token);\n      console.log(\"User logged in:\", userData); // Log user data\n\n      return {\n        success: true,\n        role: userData.role\n      };\n    } catch (error) {\n      console.error('Login failed:', error);\n      return {\n        success: false,\n        message: error.message\n      };\n    }\n  };\n  const logout = () => {\n    // Clear user and token data from state\n    setUser(null);\n    setToken(null);\n\n    // Clear sensitive data from localStorage (you can adjust based on your app's data)\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n\n    // Optionally, you can clear cookies if the token is stored there\n    document.cookie = \"token=; Max-Age=0; path=/;\"; // If you're using cookies for authentication\n\n    // Redirect user to the login page (or another page of your choice)\n    window.location.href = '/login'; // Or use navigation methods based on your router\n  };\n  const value = {\n    user,\n    token,\n    login,\n    logout,\n    isAuthenticated: !!token\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"GjQvNlviHZiIEOgy+2FWx3ml/o0=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","loginUserAPI","loginEmployeeAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","login","credentials","isEmployee","response","success","data","userData","role","console","log","error","message","logout","localStorage","removeItem","document","cookie","window","location","href","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mrdun/Desktop/BRICS/BRICS-App-V2-main/frontend/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\nimport { loginUserAPI, loginEmployeeAPI } from './api';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n\r\n  const login = async (credentials, isEmployee = false) => {\r\n    try {\r\n      const response = isEmployee \r\n        ? await loginEmployeeAPI(credentials)\r\n        : await loginUserAPI(credentials);\r\n  \r\n      if (!response || !response.success || !response.data) {\r\n        throw new Error('Invalid response from server');\r\n      }\r\n  \r\n      const userData = {\r\n        ...response.data,\r\n        role: isEmployee ? 'employee' : 'user'\r\n      };\r\n  \r\n      setUser(userData);\r\n      setToken(response.data.token);\r\n      console.log(\"User logged in:\", userData); // Log user data\r\n  \r\n      return { success: true, role: userData.role };\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      return { success: false, message: error.message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    // Clear user and token data from state\r\n    setUser(null);\r\n    setToken(null);\r\n\r\n    // Clear sensitive data from localStorage (you can adjust based on your app's data)\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n\r\n    // Optionally, you can clear cookies if the token is stored there\r\n    document.cookie = \"token=; Max-Age=0; path=/;\";  // If you're using cookies for authentication\r\n\r\n    // Redirect user to the login page (or another page of your choice)\r\n    window.location.href = '/login';  // Or use navigation methods based on your router\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    login,\r\n    logout,\r\n    isAuthenticated: !!token\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAClE,SAASC,YAAY,EAAEC,gBAAgB,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,gBAAGP,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMkB,KAAK,GAAG,MAAAA,CAAOC,WAAW,EAAEC,UAAU,GAAG,KAAK,KAAK;IACvD,IAAI;MACF,MAAMC,QAAQ,GAAGD,UAAU,GACvB,MAAMjB,gBAAgB,CAACgB,WAAW,CAAC,GACnC,MAAMjB,YAAY,CAACiB,WAAW,CAAC;MAEnC,IAAI,CAACE,QAAQ,IAAI,CAACA,QAAQ,CAACC,OAAO,IAAI,CAACD,QAAQ,CAACE,IAAI,EAAE;QACpD,MAAM,IAAIb,KAAK,CAAC,8BAA8B,CAAC;MACjD;MAEA,MAAMc,QAAQ,GAAG;QACf,GAAGH,QAAQ,CAACE,IAAI;QAChBE,IAAI,EAAEL,UAAU,GAAG,UAAU,GAAG;MAClC,CAAC;MAEDL,OAAO,CAACS,QAAQ,CAAC;MACjBP,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAACP,KAAK,CAAC;MAC7BU,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,QAAQ,CAAC,CAAC,CAAC;;MAE1C,OAAO;QAAEF,OAAO,EAAE,IAAI;QAAEG,IAAI,EAAED,QAAQ,CAACC;MAAK,CAAC;IAC/C,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,OAAO;QAAEN,OAAO,EAAE,KAAK;QAAEO,OAAO,EAAED,KAAK,CAACC;MAAQ,CAAC;IACnD;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAf,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,IAAI,CAAC;;IAEd;IACAc,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;IAC/BD,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;;IAEhC;IACAC,QAAQ,CAACC,MAAM,GAAG,4BAA4B,CAAC,CAAE;;IAEjD;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAE;EACpC,CAAC;EAED,MAAMC,KAAK,GAAG;IACZxB,IAAI;IACJE,KAAK;IACLE,KAAK;IACLY,MAAM;IACNS,eAAe,EAAE,CAAC,CAACvB;EACrB,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAACkC,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAA1B,QAAA,EAChCA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC/B,GAAA,CA3DWF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}