{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrdun\\\\Desktop\\\\BRICS\\\\BRICS-App-V2-main\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAuth } from '../AuthContext';\nimport { loginUserAPI, loginEmployeeAPI } from '../api';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { Container, TextField, Button, Typography, FormControlLabel, Checkbox, Alert } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport '../styles/global.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  container: {\n    marginTop: '50px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  form: {\n    width: '100%',\n    marginTop: '20px'\n  },\n  submit: {\n    margin: '20px 0px'\n  }\n});\nfunction Login() {\n  _s();\n  const classes = useStyles();\n  const {\n    login\n  } = useAuth();\n  const navigate = useNavigate();\n  const [isEmployee, setIsEmployee] = useState(false);\n  const [form, setForm] = useState({\n    userName: '',\n    accNumber: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(prevForm => ({\n      ...prevForm,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = isEmployee ? await loginEmployeeAPI(form) : await loginUserAPI(form);\n      login(response.data);\n      navigate(isEmployee ? '/employee-dashboard' : '/user-dashboard');\n    } catch (err) {\n      setError('Invalid credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      children: isEmployee ? 'Employee Login' : 'User Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit,\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"userName\",\n        label: \"Username\",\n        name: \"userName\",\n        autoComplete: \"username\",\n        autoFocus: true,\n        value: form.userName,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"accNumber\",\n        label: \"Account Number\",\n        id: \"accNumber\",\n        autoComplete: \"account-number\",\n        value: form.accNumber,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        id: \"password\",\n        autoComplete: \"current-password\",\n        value: form.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          value: isEmployee,\n          color: \"primary\",\n          onChange: () => setIsEmployee(!isEmployee)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 20\n        }, this),\n        label: \"Login as Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        variant: \"body2\",\n        children: \"Don't have an account? Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"9NU1FZ3ihdt1yGzzxCHK8alNaNk=\", false, function () {\n  return [useStyles, useAuth, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useAuth","loginUserAPI","loginEmployeeAPI","useNavigate","Link","Container","TextField","Button","Typography","FormControlLabel","Checkbox","Alert","makeStyles","jsxDEV","_jsxDEV","useStyles","container","marginTop","display","flexDirection","alignItems","form","width","submit","margin","Login","_s","classes","login","navigate","isEmployee","setIsEmployee","setForm","userName","accNumber","password","error","setError","handleChange","e","name","value","target","prevForm","handleSubmit","preventDefault","response","data","err","component","maxWidth","className","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","severity","onSubmit","noValidate","required","fullWidth","id","label","autoComplete","autoFocus","onChange","type","control","color","to","_c","$RefreshReg$"],"sources":["C:/Users/mrdun/Desktop/BRICS/BRICS-App-V2-main/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAuth } from '../AuthContext';\r\nimport { loginUserAPI, loginEmployeeAPI } from '../api';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Alert,\r\n} from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport '../styles/global.css';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    marginTop: '50px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: '20px',\r\n  },\r\n  submit: {\r\n    margin: '20px 0px',\r\n  },\r\n});\r\n\r\nfunction Login() {\r\n  const classes = useStyles();\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [isEmployee, setIsEmployee] = useState(false);\r\n  const [form, setForm] = useState({\r\n    userName: '',\r\n    accNumber: '',\r\n    password: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm(prevForm => ({\r\n      ...prevForm,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = isEmployee ? await loginEmployeeAPI(form) : await loginUserAPI(form);\r\n      login(response.data);\r\n      navigate(isEmployee ? '/employee-dashboard' : '/user-dashboard');\r\n    } catch (err) {\r\n      setError('Invalid credentials');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        {isEmployee ? 'Employee Login' : 'User Login'}\r\n      </Typography>\r\n      {error && <Alert severity=\"error\">{error}</Alert>}\r\n      <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"userName\"\r\n          label=\"Username\"\r\n          name=\"userName\"\r\n          autoComplete=\"username\"\r\n          autoFocus\r\n          value={form.userName}\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"accNumber\"\r\n          label=\"Account Number\"\r\n          id=\"accNumber\"\r\n          autoComplete=\"account-number\"\r\n          value={form.accNumber}\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"current-password\"\r\n          value={form.password}\r\n          onChange={handleChange}\r\n        />\r\n        <FormControlLabel\r\n          control={<Checkbox value={isEmployee} color=\"primary\" onChange={() => setIsEmployee(!isEmployee)} />}\r\n          label=\"Login as Employee\"\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          Sign In\r\n        </Button>\r\n        <Link to=\"/register\" variant=\"body2\">\r\n          {\"Don't have an account? Register\"}\r\n        </Link>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}